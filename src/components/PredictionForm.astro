---
import '../styles/cards.css';
const API_URL = import.meta.env.PUBLIC_API_URL;
---
<div class="flex flex-col items-center justify-center">
  <div class="card">
    <div class="flex items-center justify-center w-14 h-14 bg-blue-600 rounded-full mb-4">
      <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
      </svg>
    </div>
    <h2 class="text-2xl font-bold text-gray-900 mb-2 text-center">Predicción de Clusters</h2>
    <p class="text-gray-600 text-center mb-6">Ingresa los datos para obtener la predicción</p>
    <form id="prediction-form" class="space-y-4 w-full">
      <div>
        <label for="edad" class="block text-sm font-medium text-gray-700 mb-1">Edad</label>
        <input type="number" id="edad" name="edad" min="18" max="100" required class="input" placeholder="Ej: 25" />
      </div>
      <div>
        <label for="genero" class="block text-sm font-medium text-gray-700 mb-1">Género</label>
        <select id="genero" name="genero" required class="input">
          <option value="">Selecciona una opción</option>
          <option value="0">Masculino</option>
          <option value="1">Femenino</option>
        </select>
      </div>
      <div>
        <label for="monto_promedio" class="block text-sm font-medium text-gray-700 mb-1">Monto Promedio ($)</label>
        <input type="number" id="monto_promedio" name="monto_promedio" step="0.01" min="0" required class="input" placeholder="Ej: 1500.50" />
      </div>
      <div>
        <label for="saldo_promedio" class="block text-sm font-medium text-gray-700 mb-1">Saldo Promedio ($)</label>
        <input type="number" id="saldo_promedio" name="saldo_promedio" step="0.01" min="0" required class="input" placeholder="Ej: 2500.75" />
      </div>
      <button type="submit" id="submit-btn" class="btn-primary">
        <span id="btn-text">Realizar Predicción</span>
        <span id="btn-loading" class="hidden flex items-center justify-center">
          <svg class="animate-spin-slow -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Procesando...
        </span>
      </button>
    </form>
    <div id="error-message" class="hidden mt-4 p-4 bg-red-50 border border-red-200 rounded-lg">
      <div class="flex">
        <svg class="w-5 h-5 text-red-400 mr-2 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
        </svg>
        <div>
          <h3 class="text-sm font-medium text-red-800">Error en la predicción</h3>
          <p id="error-text" class="text-sm text-red-700 mt-1"></p>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const API_URL = import.meta.env.PUBLIC_API_URL;
  const form = document.getElementById("prediction-form");
  const submitBtn = document.getElementById("submit-btn");
  const btnText = document.getElementById("btn-text");
  const btnLoading = document.getElementById("btn-loading");
  const errorMessage = document.getElementById("error-message");
  const errorText = document.getElementById("error-text");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    errorMessage.classList.add("hidden");
    submitBtn.disabled = true;
    btnText.classList.add("hidden");
    btnLoading.classList.remove("hidden");
    try {
      const formData = new FormData(form);
      const data = {
        edad: parseInt(formData.get("edad")),
        genero: parseInt(formData.get("genero")),
        monto_promedio: parseFloat(formData.get("monto_promedio")),
        saldo_promedio: parseFloat(formData.get("saldo_promedio")),
      };
      const response = await fetch("https://mi-pf-jle.azurewebsites.net/api/segment-predict?code=JuQZe1UwLLPw6CttEEkKQty1hdETff1t7ITcCuBXf4L3AzFuqaLLdQ==", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      });
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(
          errorData.error || `Error del servidor: ${response.status}`
        );
      }
      const result = await response.json();
      window.dispatchEvent(
        new CustomEvent("predictionResult", {
          detail: result,
        })
      );
    } catch (error) {
      errorText.textContent =
        error instanceof Error
          ? error.message
          : "Error desconocido al procesar la solicitud";
      errorMessage.classList.remove("hidden");
    } finally {
      submitBtn.disabled = false;
      btnText.classList.remove("hidden");
      btnLoading.classList.add("hidden");
    }
  });
</script>
